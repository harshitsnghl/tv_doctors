{"version":3,"sources":["components/DoctorCardComponent.tsx","shared/baseUrl.ts","components/MainComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DoctorCard","props","state","selectedDoctor","doctor","this","setState","degrees","degreeList","map","degree","i","length","CardText","className","doctorList","doctors","Card","CardImg","top","src","image","alt","name","CardBody","style","paddingLeft","CardTitle","margin","experience","renderDegree","speciality","charge","time","Button","backgroundColor","color","border","fontSize","fontWeight","boxShadow","id","Component","baseUrl","Main","specialityToggle","specialityDropdownOpen","availabilityToggle","availabilityDropdownOpen","cityToggle","cityDropdownOpen","availability","city","filteredDoctors","specialisations","cities","isDoctorsLoading","isCitiesLoading","isSpecialisationsLoading","fetch","then","res","json","sort","a","b","onSelect","tempDoctors","filter","Fragment","Navbar","dark","NavbarBrand","href","ButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","specialisation","DropdownItem","onClick","onSpecialitySelect","borderBottom","borderRadius","onAvailabilitySelect","onCitySelect","React","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c1e385a.chunk.js","sourcesContent":["import { Card } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { Button, CardBody, CardImg, CardText, CardTitle } from \"reactstrap\";\nimport \"./DoctorCard.scss\";\nimport { Doctor } from \"../shared/doctors\";\n\ninterface State {\n\tselectedDoctor: Doctor;\n}\n\ninterface Props {\n\tdoctors: Doctor[];\n}\n\nclass DoctorCard extends Component<Props, State> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedDoctor: null!,\n\t\t};\n\t}\n\n\tonDoctorSelect(doctor: Doctor) {\n\t\tthis.setState({ selectedDoctor: doctor });\n\t}\n\n\trenderDegree(degrees: string[]) {\n\t\tconst degreeList = degrees.map((degree, i) => {\n\t\t\tif (i === degrees.length - 1)\n\t\t\t\treturn (\n\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t<CardText className=\"doctor-details\">{degree}</CardText>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\telse\n\t\t\t\treturn (\n\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t<CardText className=\"doctor-details\">\n\t\t\t\t\t\t\t{degree},\n\t\t\t\t\t\t</CardText>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t});\n\n\t\treturn <div className=\"d-flex flex-row\">{degreeList}</div>;\n\t}\n\n\trender() {\n\t\tconst doctorList = this.props.doctors.map((doctor, i) => {\n\t\t\treturn (\n\t\t\t\t<div className=\"col-4 mt-3 g-3\" key={i}>\n\t\t\t\t\t<Card key={doctor.id}>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-2\">\n\t\t\t\t\t\t\t\t<CardImg\n\t\t\t\t\t\t\t\t\ttop\n\t\t\t\t\t\t\t\t\tsrc={doctor.image}\n\t\t\t\t\t\t\t\t\talt={doctor.name}\n\t\t\t\t\t\t\t\t\tclassName=\"doctor-image\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<CardBody\n\t\t\t\t\t\t\t\tclassName=\"col-7 row\"\n\t\t\t\t\t\t\t\tstyle={{ paddingLeft: \"1rem\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t\t\t\t<CardTitle\n\t\t\t\t\t\t\t\t\t\tclassName=\"doctor-name\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ margin: \"0.1rem\" }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDr. {doctor.name}\n\t\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t\t\t<CardText className=\"doctor-details\">\n\t\t\t\t\t\t\t\t\t\t{doctor.experience} years experience\n\t\t\t\t\t\t\t\t\t</CardText>\n\t\t\t\t\t\t\t\t\t{this.renderDegree(doctor.degree)}\n\t\t\t\t\t\t\t\t\t<CardText className=\"doctor-details\">\n\t\t\t\t\t\t\t\t\t\t{doctor.speciality}\n\t\t\t\t\t\t\t\t\t</CardText>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-2 p-0 d-flex align-self-end pb-1\">\n\t\t\t\t\t\t\t\t\t<CardText className=\"doctor-charge\">\n\t\t\t\t\t\t\t\t\t\tâ‚¹{doctor.charge}\n\t\t\t\t\t\t\t\t\t</CardText>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t<hr style={{ margin: \"1rem 0 0 0\" }}></hr>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<div className=\"row my-2\">\n\t\t\t\t\t\t\t\t\t<CardText className=\"doctor-details col\">\n\t\t\t\t\t\t\t\t\t\tNext Availability<br></br>\n\t\t\t\t\t\t\t\t\t\tAt {doctor.time}\n\t\t\t\t\t\t\t\t\t</CardText>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"col schedule-button\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#FFFFFF\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#E67E89\",\n\t\t\t\t\t\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \".8rem\",\n\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"bolder\",\n\t\t\t\t\t\t\t\t\t\t\tboxShadow: \"none\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSCHEDULE NOW\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\" style={{ margin: \"0rem 2rem\" }}>\n\t\t\t\t\t{doctorList}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DoctorCard;\n","export const baseUrl = \"http://localhost:3001/\";\n","import React from \"react\";\nimport {\n\tButtonDropdown,\n\tDropdownItem,\n\tDropdownMenu,\n\tDropdownToggle,\n\tNavbar,\n\tNavbarBrand,\n} from \"reactstrap\";\nimport \"./Main.scss\";\nimport DoctorCard from \"./DoctorCardComponent\";\nimport { Doctor } from \"../shared/doctors\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\ninterface MainProps {}\n\ninterface MainState {\n\tspeciality: string;\n\tavailability: boolean;\n\tcity: string;\n\tspecialityDropdownOpen: boolean;\n\tavailabilityDropdownOpen: boolean;\n\tcityDropdownOpen: boolean;\n\tfilteredDoctors: Doctor[];\n\tspecialisations: string[];\n\tdoctors: Doctor[];\n\tcities: string[];\n\tisDoctorsLoading: boolean;\n\tisCitiesLoading: boolean;\n\tisSpecialisationsLoading: boolean;\n}\n\nclass Main extends React.Component<MainProps, MainState> {\n\tconstructor(props: MainProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tspeciality: \"Speciality\",\n\t\t\tavailability: null!,\n\t\t\tcity: \"City\",\n\t\t\tspecialityDropdownOpen: false,\n\t\t\tavailabilityDropdownOpen: false,\n\t\t\tcityDropdownOpen: false,\n\t\t\tfilteredDoctors: [],\n\t\t\tspecialisations: [],\n\t\t\tdoctors: [],\n\t\t\tcities: [],\n\t\t\tisDoctorsLoading: true,\n\t\t\tisCitiesLoading: true,\n\t\t\tisSpecialisationsLoading: true,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(baseUrl + \"doctors\").then((res) => {\n\t\t\tres.json().then((json) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdoctors: json,\n\t\t\t\t\tisDoctorsLoading: false,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tfetch(baseUrl + \"specialisations\").then((res) => {\n\t\t\tres.json().then((json) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tspecialisations: json,\n\t\t\t\t\tisSpecialisationsLoading: false,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tfetch(baseUrl + \"cities\").then((res) => {\n\t\t\tres.json().then((json: []) => {\n\t\t\t\tjson.sort((a, b) => {\n\t\t\t\t\tif (a < b) return -1;\n\t\t\t\t\tif (a > b) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\tcities: json,\n\t\t\t\t\tisCitiesLoading: false,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tspecialityToggle = () => {\n\t\tthis.setState({\n\t\t\tspecialityDropdownOpen: !this.state.specialityDropdownOpen,\n\t\t});\n\t};\n\n\tavailabilityToggle = () => {\n\t\tthis.setState({\n\t\t\tavailabilityDropdownOpen: !this.state.availabilityDropdownOpen,\n\t\t});\n\t};\n\n\tcityToggle = () => {\n\t\tthis.setState({ cityDropdownOpen: !this.state.cityDropdownOpen });\n\t};\n\n\tonSpecialitySelect(speciality: string) {\n\t\tthis.setState({ speciality: speciality, filteredDoctors: [] }, () => {\n\t\t\tthis.onSelect();\n\t\t});\n\t}\n\n\tonAvailabilitySelect(availability: boolean) {\n\t\tthis.setState(\n\t\t\t{ availability: availability, filteredDoctors: [] },\n\t\t\t() => {\n\t\t\t\tthis.onSelect();\n\t\t\t}\n\t\t);\n\t}\n\n\tonCitySelect(city: string) {\n\t\tthis.setState({ city: city, filteredDoctors: [] }, () => {\n\t\t\tthis.onSelect();\n\t\t});\n\t}\n\n\tonSelect() {\n\t\tif (\n\t\t\tthis.state.speciality === \"Speciality\" ||\n\t\t\tthis.state.availability == null ||\n\t\t\tthis.state.city === \"City\"\n\t\t)\n\t\t\treturn;\n\t\tconst tempDoctors = this.state.doctors.filter((doctor) => {\n\t\t\treturn (\n\t\t\t\tdoctor.availability === this.state.availability &&\n\t\t\t\tdoctor.city === this.state.city &&\n\t\t\t\tdoctor.speciality === this.state.speciality\n\t\t\t);\n\t\t});\n\t\tthis.setState({\n\t\t\tfilteredDoctors: tempDoctors,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { isDoctorsLoading, isSpecialisationsLoading, isCitiesLoading } =\n\t\t\tthis.state;\n\t\tif (isDoctorsLoading || isSpecialisationsLoading || isCitiesLoading)\n\t\t\treturn (\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col d-flex justify-content-center\">\n\t\t\t\t\t\t\t<h1> Loading</h1>{\" \"}\n\t\t\t\t\t\t\t<i className=\"fa fa-spinner fa-3x fa-spin\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{\" \"}\n\t\t\t\t<Navbar dark>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"assets/logo.png\"\n\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\tclassName=\"col-1 ml-5\"\n\t\t\t\t\t></img>\n\t\t\t\t\t<div className=\"col-9\">\n\t\t\t\t\t\t<span className=\"mx-1\"></span>\n\t\t\t\t\t\t<NavbarBrand href=\"/\" className=\"brand\">\n\t\t\t\t\t\t\tBoard of doctors\n\t\t\t\t\t\t</NavbarBrand>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-2 d-flex justify-content-end\">\n\t\t\t\t\t\t<i className=\"fa fa-user-o user-icon\"></i>\n\t\t\t\t\t\t<ButtonDropdown className=\"button login-button\">\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t\t<i className=\"fa fa-angle-down caret\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t</Navbar>\n\t\t\t\t<Navbar id=\"filter-bar\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.specialityDropdownOpen}\n\t\t\t\t\t\t\ttoggle={this.specialityToggle}\n\t\t\t\t\t\t\tclassName=\"col filter-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"#FFFFFF\",\n\t\t\t\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\t\t\t\tboxShadow: \"none\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"speciality d-flex flex-row\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.speciality}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-angle-down filter-caret\"></i>\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t{this.state.specialisations.map(\n\t\t\t\t\t\t\t\t\t(specialisation, i) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onSpecialitySelect(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tspecialisation\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{specialisation}\n\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.availabilityDropdownOpen}\n\t\t\t\t\t\t\ttoggle={this.availabilityToggle}\n\t\t\t\t\t\t\tclassName=\"col filter-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"#FFFFFF\",\n\t\t\t\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\t\t\t\tboxShadow: \"none\",\n\t\t\t\t\t\t\t\t\tfontSize: \"80%\",\n\t\t\t\t\t\t\t\t\tborderBottom: \"1px solid black\",\n\t\t\t\t\t\t\t\t\tborderRadius: \"0\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"d-flex flex-row\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.availability == null\n\t\t\t\t\t\t\t\t\t? \"Avalibility\"\n\t\t\t\t\t\t\t\t\t: this.state.availability\n\t\t\t\t\t\t\t\t\t? \"Available\"\n\t\t\t\t\t\t\t\t\t: \"Not Available\"}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-angle-down filter-caret\"></i>\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tthis.onAvailabilitySelect(true)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tYes\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tthis.onAvailabilitySelect(false)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNo\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.cityDropdownOpen}\n\t\t\t\t\t\t\ttoggle={this.cityToggle}\n\t\t\t\t\t\t\tclassName=\"col filter-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"#FFFFFF\",\n\t\t\t\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\t\t\t\tboxShadow: \"none\",\n\t\t\t\t\t\t\t\t\tfontSize: \"80%\",\n\t\t\t\t\t\t\t\t\tborderBottom: \"1px solid black\",\n\t\t\t\t\t\t\t\t\tborderRadius: \"0\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"d-flex flex-row\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.city}{\" \"}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-angle-down filter-caret\"></i>\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t{this.state.cities.map((city, i) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.onCitySelect(city)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{city}\n\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</div>\n\t\t\t\t</Navbar>\n\t\t\t\t<div id=\"doctor-cards-block\">\n\t\t\t\t\t<DoctorCard\n\t\t\t\t\t\tdoctors={this.state.filteredDoctors}\n\t\t\t\t\t></DoctorCard>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Main;\n","import \"./App.scss\";\nimport Main from \"./components/MainComponent\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Main></Main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}